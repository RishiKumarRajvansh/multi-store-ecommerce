# Generated by Django 4.2.23 on 2025-08-13 06:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('stores', '0001_initial'),
        ('orders', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('sender_role', models.CharField(choices=[('customer', 'Customer'), ('store', 'Store'), ('admin', 'Admin'), ('system', 'System')], max_length=10)),
                ('message_type', models.CharField(choices=[('text', 'Text'), ('image', 'Image'), ('file', 'File'), ('system', 'System'), ('order_update', 'Order Update')], default='text', max_length=20)),
                ('content', models.TextField()),
                ('attachment', models.FileField(blank=True, null=True, upload_to='chat_attachments/')),
                ('attachment_name', models.CharField(blank=True, max_length=255)),
                ('is_read_by_customer', models.BooleanField(default=False)),
                ('is_read_by_store', models.BooleanField(default=False)),
                ('is_read_by_admin', models.BooleanField(default=False)),
                ('read_by_customer_at', models.DateTimeField(blank=True, null=True)),
                ('read_by_store_at', models.DateTimeField(blank=True, null=True)),
                ('read_by_admin_at', models.DateTimeField(blank=True, null=True)),
                ('is_edited', models.BooleanField(default=False)),
                ('edited_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('reply_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replies', to='chat.chatmessage')),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sent_chat_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'chat_messages',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatSession',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('subject', models.CharField(blank=True, max_length=200)),
                ('status', models.CharField(choices=[('active', 'Active'), ('closed', 'Closed'), ('escalated', 'Escalated'), ('admin_taken_over', 'Admin Taken Over')], default='active', max_length=20)),
                ('escalated_at', models.DateTimeField(blank=True, null=True)),
                ('admin_takeover_at', models.DateTimeField(blank=True, null=True)),
                ('is_anonymous', models.BooleanField(default=False)),
                ('customer_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('closure_reason', models.TextField(blank=True)),
                ('customer_rating', models.PositiveIntegerField(blank=True, null=True)),
                ('customer_feedback', models.TextField(blank=True)),
                ('admin_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supervised_chat_sessions', to=settings.AUTH_USER_MODEL)),
                ('closed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='closed_chat_sessions', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_chat_sessions', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chat_sessions', to='orders.order')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_sessions', to='stores.store')),
            ],
            options={
                'db_table': 'chat_sessions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Dispute',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('dispute_number', models.CharField(max_length=50, unique=True)),
                ('dispute_type', models.CharField(choices=[('order_issue', 'Order Issue'), ('delivery_problem', 'Delivery Problem'), ('payment_issue', 'Payment Issue'), ('quality_complaint', 'Quality Complaint'), ('refund_request', 'Refund Request'), ('other', 'Other')], max_length=20)),
                ('subject', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('open', 'Open'), ('investigating', 'Investigating'), ('resolved', 'Resolved'), ('closed', 'Closed'), ('escalated', 'Escalated')], default='open', max_length=15)),
                ('evidence_files', models.JSONField(blank=True, default=list)),
                ('assigned_at', models.DateTimeField(blank=True, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True)),
                ('compensation_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_disputes', to=settings.AUTH_USER_MODEL)),
                ('chat_session', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dispute', to='chat.chatsession')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disputes', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='disputes', to='orders.order')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disputes', to='stores.store')),
            ],
            options={
                'db_table': 'chat_disputes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Resolution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resolution_type', models.CharField(choices=[('refund', 'Refund'), ('replacement', 'Replacement'), ('store_credit', 'Store Credit'), ('partial_refund', 'Partial Refund'), ('no_action', 'No Action'), ('other', 'Other')], max_length=20)),
                ('description', models.TextField()),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('customer_satisfied', models.BooleanField(blank=True, null=True)),
                ('customer_feedback', models.TextField(blank=True)),
                ('dispute', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='resolution', to='chat.dispute')),
                ('resolved_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resolved_disputes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'chat_resolutions',
            },
        ),
        migrations.CreateModel(
            name='ChatNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notification_type', models.CharField(choices=[('new_message', 'New Message'), ('session_closed', 'Session Closed'), ('admin_joined', 'Admin Joined'), ('escalated', 'Escalated')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('is_sent', models.BooleanField(default=False)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='chat.chatmessage')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_notifications', to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='chat.chatsession')),
            ],
            options={
                'db_table': 'chat_notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='chat.chatsession'),
        ),
        migrations.AddIndex(
            model_name='dispute',
            index=models.Index(fields=['dispute_number'], name='chat_disput_dispute_db513a_idx'),
        ),
        migrations.AddIndex(
            model_name='dispute',
            index=models.Index(fields=['customer'], name='chat_disput_custome_043f41_idx'),
        ),
        migrations.AddIndex(
            model_name='dispute',
            index=models.Index(fields=['store'], name='chat_disput_store_i_397240_idx'),
        ),
        migrations.AddIndex(
            model_name='dispute',
            index=models.Index(fields=['status'], name='chat_disput_status_bdb7b2_idx'),
        ),
        migrations.AddIndex(
            model_name='dispute',
            index=models.Index(fields=['created_at'], name='chat_disput_created_266905_idx'),
        ),
        migrations.AddIndex(
            model_name='chatsession',
            index=models.Index(fields=['customer'], name='chat_sessio_custome_0af429_idx'),
        ),
        migrations.AddIndex(
            model_name='chatsession',
            index=models.Index(fields=['store'], name='chat_sessio_store_i_dc7a26_idx'),
        ),
        migrations.AddIndex(
            model_name='chatsession',
            index=models.Index(fields=['order'], name='chat_sessio_order_i_3f71c1_idx'),
        ),
        migrations.AddIndex(
            model_name='chatsession',
            index=models.Index(fields=['status'], name='chat_sessio_status_f6889c_idx'),
        ),
        migrations.AddIndex(
            model_name='chatsession',
            index=models.Index(fields=['created_at'], name='chat_sessio_created_d061d1_idx'),
        ),
        migrations.AddIndex(
            model_name='chatnotification',
            index=models.Index(fields=['recipient'], name='chat_notifi_recipie_ca33e4_idx'),
        ),
        migrations.AddIndex(
            model_name='chatnotification',
            index=models.Index(fields=['session'], name='chat_notifi_session_ea5001_idx'),
        ),
        migrations.AddIndex(
            model_name='chatnotification',
            index=models.Index(fields=['is_read'], name='chat_notifi_is_read_d43806_idx'),
        ),
        migrations.AddIndex(
            model_name='chatnotification',
            index=models.Index(fields=['created_at'], name='chat_notifi_created_5047b7_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['session'], name='chat_messag_session_70d2c0_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['sender'], name='chat_messag_sender__e8b05b_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['created_at'], name='chat_messag_created_eb4133_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['message_type'], name='chat_messag_message_b8fb34_idx'),
        ),
    ]

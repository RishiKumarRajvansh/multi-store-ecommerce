# Generated by Django 4.2.23 on 2025-08-13 06:02

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceableArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('polygon_coordinates', models.JSONField(help_text='Array of [lat, lng] coordinates defining the service area boundary')),
                ('center_latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('center_longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'locations_serviceable_areas',
            },
        ),
        migrations.CreateModel(
            name='ZipArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('zip_code', models.CharField(max_length=10, unique=True)),
                ('area_name', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('is_serviceable', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'locations_zip_areas',
                'indexes': [models.Index(fields=['zip_code'], name='locations_z_zip_cod_ad6e6a_idx'), models.Index(fields=['city'], name='locations_z_city_93ea04_idx'), models.Index(fields=['is_serviceable'], name='locations_z_is_serv_012150_idx')],
            },
        ),
        migrations.CreateModel(
            name='DeliveryZone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('base_delivery_fee', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_active', models.BooleanField(default=True)),
                ('zip_areas', models.ManyToManyField(related_name='delivery_zones', to='locations.ziparea')),
            ],
            options={
                'db_table': 'locations_delivery_zones',
            },
        ),
        migrations.CreateModel(
            name='DistanceMatrix',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('distance_km', models.DecimalField(decimal_places=2, max_digits=6)),
                ('estimated_time_minutes', models.PositiveIntegerField()),
                ('from_zip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='distances_from', to='locations.ziparea')),
                ('to_zip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='distances_to', to='locations.ziparea')),
            ],
            options={
                'db_table': 'locations_distance_matrix',
                'indexes': [models.Index(fields=['from_zip', 'to_zip'], name='locations_d_from_zi_aad907_idx')],
                'unique_together': {('from_zip', 'to_zip')},
            },
        ),
    ]

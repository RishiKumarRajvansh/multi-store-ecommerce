# Generated by Django 4.2.23 on 2025-08-13 06:02

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('stores', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='category_images/')),
                ('icon', models.CharField(blank=True, help_text='Font Awesome icon class', max_length=50)),
                ('display_order', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'db_table': 'catalog_categories',
                'ordering': ['display_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=6, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_vegetarian', models.BooleanField(default=True)),
                ('calories_per_unit', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'catalog_ingredients',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('description', models.TextField()),
                ('sku', models.CharField(max_length=50, unique=True)),
                ('barcode', models.CharField(blank=True, max_length=50)),
                ('brand', models.CharField(blank=True, max_length=100)),
                ('weight_grams', models.PositiveIntegerField(blank=True, null=True)),
                ('dimensions', models.JSONField(blank=True, help_text='Length, width, height in cm', null=True)),
                ('main_image', models.ImageField(upload_to='product_images/')),
                ('additional_images', models.JSONField(blank=True, default=list)),
                ('meta_title', models.CharField(blank=True, max_length=200)),
                ('meta_description', models.TextField(blank=True)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('is_vegetarian', models.BooleanField(default=False)),
                ('shelf_life_days', models.PositiveIntegerField(blank=True, null=True)),
                ('storage_temperature', models.CharField(blank=True, max_length=50)),
                ('preparation_time_minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('calories_per_100g', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('protein_per_100g', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('fat_per_100g', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('carbs_per_100g', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'catalog_products',
            },
        ),
        migrations.CreateModel(
            name='ProductIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_required', models.BooleanField(default=False)),
                ('default_quantity', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('max_quantity', models.DecimalField(decimal_places=2, default=5, max_digits=5)),
            ],
            options={
                'db_table': 'catalog_product_ingredients',
            },
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('title', models.CharField(blank=True, max_length=200)),
                ('comment', models.TextField(blank=True)),
                ('images', models.JSONField(blank=True, default=list)),
                ('is_verified_purchase', models.BooleanField(default=False)),
                ('is_approved', models.BooleanField(default=True)),
                ('helpful_votes', models.PositiveIntegerField(default=0)),
            ],
            options={
                'db_table': 'catalog_product_reviews',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StoreProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0)])),
                ('compare_at_price', models.DecimalField(blank=True, decimal_places=2, help_text='Original price for showing discounts', max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('cost_price', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('stock_quantity', models.PositiveIntegerField(default=0)),
                ('low_stock_threshold', models.PositiveIntegerField(default=5)),
                ('max_quantity_per_order', models.PositiveIntegerField(blank=True, null=True)),
                ('is_available', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('display_order', models.PositiveIntegerField(default=0)),
                ('store_description', models.TextField(blank=True)),
                ('store_images', models.JSONField(blank=True, default=list)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='store_products', to='catalog.product')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='store_products', to='stores.store')),
            ],
            options={
                'db_table': 'catalog_store_products',
            },
        ),
        migrations.CreateModel(
            name='ProductSuggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('score', models.DecimalField(decimal_places=2, help_text='Confidence score between 0 and 1', max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('times_bought_together', models.PositiveIntegerField(default=0)),
                ('primary_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suggestions_as_primary', to='catalog.product')),
                ('suggested_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suggestions_as_suggested', to='catalog.product')),
            ],
            options={
                'db_table': 'catalog_product_suggestions',
            },
        ),
    ]
